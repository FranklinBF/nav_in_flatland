<launch>
  <param name="use_sim_time" value="true"/>

  <arg name="global_frame_id" default="map"/>
  <arg name="odom_frame_id" default="odom"/>
  <arg name="base_frame_id" default="base_footprint"/>

  <arg name="odom_ground_truth" default="/odometry/ground_truth"/>

  <arg name="scan_topic" default="scan"/> <!-- default laser topic in flatland -->
  
  <!--  ******************** flatland********************  -->
  <!--
  You can override these default values:
    roslaunch flatland_Server server.launch world_path:="/some/world.yaml" initial_rate:="30.0"
  -->

  <arg name="map_path"   default="$(find simulator_setup)/maps/map1/map.yaml"/>

  <arg name="world_path"   default="$(find simulator_setup)/maps/map1/map.world.yaml"/>
  <arg name="update_rate" default="1000.0"/>
  <arg name="step_size" default="0.05"/>
  <arg name="show_viz" default="true"/>
  <arg name="viz_pub_rate" default="30.0"/>
  <arg name="use_rviz" default="true"/>  
  <arg name="train_mode" default="true"/>
  <env name="ROSCONSOLE_FORMAT" value="[${severity} ${time} ${logger}]: ${message}" />

  <!-- launch flatland server -->
  <node name="flatland_server" pkg="flatland_server" type="flatland_server" output="screen">  
    <param name="world_path" value="$(arg world_path)" />
    <param name="update_rate" value="$(arg update_rate)" />
    <param name="step_size" value="$(arg step_size)" />
    <param name="show_viz" value="$(arg show_viz)" />
    <param name="viz_pub_rate" value="$(arg viz_pub_rate)" />
    <param name="train_mode" value="$(arg train_mode)" />
  </node>


  <!--  ***************** Robot Model *****************  -->
  <!-- Name of the map to use (without path nor extension) and initial position -->
  <arg name="initial_pose_x" default="0.0"/>
  <arg name="initial_pose_y" default="0.0"/>
  <arg name="initial_pose_a" default="0.0"/>

  <node name="spawn_model" pkg="rosservice" type="rosservice"
    args="call --wait /spawn_model &quot;{
      yaml_path: '$(find simulator_setup)/robot/myrobot.model.yaml',
      name: 'myrobot',
      ns: '',
      pose: {x: $(arg initial_pose_x), y: $(arg initial_pose_y), theta: $(arg initial_pose_a)}}&quot;"
    />


  <!-- ****** Maps ***** -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_path)">
   <param name="frame_id" value="$(arg global_frame_id)"/>
  </node>

<!--  ************** Navigation  ***************  -->

 <!-- move_base -->
<include file="$(find flatland_bringup)/launch/sublaunch_movebase/move_base.launch"/>

<!-- Launch localization (dummy) -->
<node pkg="tf2_ros" type="static_transform_publisher" name="map_to_odom_tfpublisher" args="0 0 0 0 0 0 $(arg global_frame_id) $(arg odom_frame_id)"/>

<node pkg="plan_localization" type="dummy_localization" name="dummy_localization" output="screen">
  <param name="global_frame_id" value="$(arg global_frame_id)"/>
  <param name="odom_frame_id" value="$(arg odom_frame_id)"/>
  <param name="base_frame_id" value="$(arg base_frame_id)"/>
  <param name="base_pose_ground_truth" value="$(arg odom_ground_truth)"/>
</node>

<!-- AMCL -->
<!-- <include file="$(find plan_manage_move_base)/launch/amcl.launch" />  -->

<!-- Waypoint generator -->
<arg name="look_ahead_distance" default="1.0"/>
<arg name="waypoint_tolerance" default="0.3"/>

<!-- <node name="plan_manager" pkg="plan_manage" type="plan_manager_node"/> -->

<!-- <node name="waypoint_server" pkg="plan_manage" type="waypoint_generator_node">
  <param name="look_ahead_distance" value="$(arg look_ahead_distance)"/>
  <param name="waypoint_tolerance" value="$(arg waypoint_tolerance)"/>
</node> -->

<!--  ************** flatland viz  ***************  -->
<group if="$(arg show_viz)">
  <node name="flatland_viz" pkg="flatland_viz" type="flatland_viz" output="screen" required="true" unless="$(arg use_rviz)"/>
</group>

<!--  ************** rviz  ***************  -->
<group if="$(arg use_rviz)">
  <node name="flatland_rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find flatland_bringup)/rviz/nav.rviz"/>
</group>


</launch>
